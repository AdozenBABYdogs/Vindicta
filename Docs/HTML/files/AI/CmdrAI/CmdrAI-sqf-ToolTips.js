NDContentPage.OnToolTipsLoaded({85:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">CmdrAI garrison action for taking a location.&nbsp; Takes a source garrison id and target location id.&nbsp; Sends a detachment from the source garrison to occupy the target location.</div></div>",88:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">CmdrAI garrison reinforcement action.&nbsp; Takes a source and target garrison id.&nbsp; Sends a detachment from the source garrison to join the target garrison.</div></div>",91:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">CmdrAI QRF action.&nbsp; Takes a source garrison model ID and cluster model ID and generates an action to attack the cluster using the garrison.</div></div>",94:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">CmdrAI garrison patrol action.&nbsp; Takes a predefined route composed of targets (see CmdrAITarget).</div></div>",140:"<div class=\"NDToolTip TEnumeration LSQF\"><div class=\"TTSummary\">Flags for &lt;Model.WorldModel.new&gt; type parameter.&nbsp; WORLD_TYPE_REAL - Real world model, contained objects represent the last known state of actual garrisons, locations, clusters etc.&nbsp; WORLD_TYPE_SIM_NOW - Sim model with only current effects of actions applied.&nbsp; i.e. Real world model + the effects of any active action that would be applied immediately if the action itself were to update. For instance if the action is to split a garrison in half, it would apply immediately because splitting a garrison is an instantaneous operation. But a move action would not apply because moving takes time.&nbsp; The purpose of this model of the world is mostly to simulate changes in available resources while new actions are being planned. Usually the first part of an action is to allocate its resources (e.g. splitting a detachment off from an existing garrison to perform the action with).&nbsp; WORLD_TYPE_SIM_FUTURE - Sim model with current and future effects of actions applied</div></div>",143:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">Primary commander AI object. This does evaluation, planning and execution of actions (based on CmdrAction.CmdrActions).&nbsp; Each &lt;Commander.AICommander&gt; needs one of these objects if it needs to perform actions.</div></div>",168:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">The base class for all commander actions. An Action is defined as any behaviour the commander can choose whether to perform.&nbsp; In general the actions are parameterized and scored based on relevance and the commanders current strategy.&nbsp; The scoring can be a complex as required, but in the end is reduced down to a single number that can be used in comparison between actions of the same type, and other types of the same priority level (see CmdrAI for how this works).&nbsp; The behaviour of the action is defined by a state machine, defined by a set of ActionStateTransitions and a set of associated variables (kind of like a blackboard system).&nbsp; Usually one or more pieces of intel will be associated with a CmdrAction to allow them to be discoverable by other commanders.</div></div>",192:"<div class=\"NDToolTip TClass LSQF\"><div class=\"TTSummary\">Models either the real world state, or a derivation of it that can be used for simulation.</div></div>"});